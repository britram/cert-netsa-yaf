##########################################################################
#
# yafApplabelRules.conf
# Basic application labeling rules for YAF
# ------------------------------------------------------------------------
# Copyright (C) 2007-2016 Carnegie Mellon University. All Rights Reserved.
# ------------------------------------------------------------------------
# Authors: Emily Ecoff <ecoff@cert.org>
#          Chris Inacio <inacio@cert.org>
#          Brian Trammell
#
# ------------------------------------------------------------------------
# GNU General Public License (GPL) Rights pursuant to Version 2, June 1991
# Government Purpose License Rights (GPLR) pursuant to DFARS 252.227-7013
#
##########################################################################
#
# Format of this File
#
# This file is a list of label statements. A label statement begins with
# the keyword 'label', and has the following form:
#
#           label <N> <label-rule>
#
# where <N> is the application label to apply (an unsigned 16-bit decimal
# integer in the range 0 to 65535), and <label-rule> specifies how to
# recognize the given application protocol. Three types of label rules are
# supported: regex, plugin, and signature.
#
# Regular expression rules have the following form:
#
#           label <N> regex <expression>
#
# The regular expression is compared against the available payload of
# both directions of the flow, and is a PCRE regular expression (see
# PCRE documentation for details). The expression is undelimited, and
# continues until the end of the line. If the expression matches either
# direction of the payload, the label <N> is applied to the flow.
#
# Plugin rules are used to label application payload using a C
# dynamically loaded library, and have the following form:
#
#          label <N> plugin <library> <function> <arg-list>
#
# where <library> is the name of a dynamically loadable library that
# exists somewhere within the LD_LIBRARY_PATH, the LTDL_LIBRARY_PATH, or
# a system library path, without the library name extension (usually
# .so); <function> is the name of the function to call within that
# library; and the optional <arg-list> is a space-separated list of
# arguments that will be passed as the argc and argv parameters to that
# function. If the plugin returns 1, the flow will be labeled with <N>.  
# Otherwise, the flow will be labeled with whatever value the plugin 
# returns (useful for a plugin that can identify more than 1 protocol.  
# See the source code to the plugins that ship with YAF for details.
#
# Regular expression rules that only search for a string have the form:
#
#	   label <N> signature <expression>
#
# The regular expression is compared against the available payload of
# the flow.  For expressions that you want to search for first before
# port-based matching, use this format.  The expression should be a
# PCRE regular expression.  The expression is undelimited, and continues
# until the end of the line.  If the expression matches, the label <N> is
# applied to the flow
#
# A '#' symbol starts a comment, and the rest of the line is a comment.
#
##########################################################################


# SSL/Proxied - choose proxy port!
#label 3133 plugin proxyplugin proxyplugin_LTX_ycProxyScanScan

# HTTP
label 80 regex HTTP/\d\.\d\b

# SSH
label 22 regex ^SSH-\d\.\d

# SMTP
label 25 regex (?i)^(HE|EH)LO\b

# DNS
label 53 plugin dnsplugin dnsplugin_LTX_ycDnsScanScan

# FTP
label 21 regex (?i)^(220\sFTP|REST\s+\d|RETR\s+\w|STOU|TYPE|PASV|USER)

# SSL/TLS
label 443 plugin tlsplugin tlsplugin_LTX_ycTlsScanScan

# SLP
label 427 plugin slpplugin slpplugin_LTX_ycSlpScanScan

# SMB (0 followed by 3 bytes length) 0xFFSMB
label 139 regex ^\x00...\xFFSMB

# IMAP
label 143 regex (?i)^(1\s(CAPABILITY|AUTHENTICATE|STARTTLS)|\*.+IMAP.+)

# IRC
label 194 plugin ircplugin ircplugin_LTX_ycIrcScanScan

# RTSP
label 554 regex RTSP/\d\.\d\b

# SIP
label 5060 regex SIP/\d\.\d\b

# RSYNC
label 873 regex ^@RSYNCD:

# PPTP
label 1723 plugin pptpplugin pptpplugin_LTX_ycPPTPScanScan

# NNTP
label 119 plugin nntpplugin nntpplugin_LTX_ycNNTPScanScan

# TFTP
label 69 plugin tftpplugin tftpplugin_LTX_ycTFTPScanScan

# Teredo
label 3544 plugin teredoplugin teredoplugin_LTX_ycTeredoScanScan

# MYSQL
label 3306 plugin mysqlplugin mysqlplugin_LTX_ycMYSQLScanScan

# POP3
label 110 plugin pop3plugin pop3plugin_LTX_ycPop3ScanScan

# SNMP
label 161 plugin snmpplugin snmpplugin_LTX_ycSnmpScanScan

# AIM
label 5190 plugin aolplugin aolplugin_LTX_ycAolScanScan

# Gnutella p2p
label 6346 regex (?i)^(GNUTELLA CONNECT/|gnd[\x01\x02]?.?.?\x01)

# Yahoo Messenger
label 5050 regex ^YMSG

# SOCKS
label 1080 plugin socksplugin socksplugin_LTX_ycSocksScanScan

# BGP
label 179 plugin bgpplugin bgpplugin_LTX_ycBgpScanScan

# DHCP
label 67 plugin dhcpplugin dhcpplugin_LTX_ycDhcpScanScan

# VNC V.3 RFB
label 5900 regex ^RFB 003\.0\d\d

# RTP/RTCP
label 5004 plugin rtpplugin rtpplugin_LTX_ycRtpScanScan

# Jabber XMPP
label 5222 regex jabber:client

#MSNP
label 1863 regex ^VER \d MSNP\d\d

#MSOffice Update
label 2223 regex ^MSOPID

#MGCP RFC 3435
label 2427 regex MGCP 1.0

#MEGACO, h.248
label 2944 regex ^MEGACO/1

#VMware Server Console
label 902 regex (?i)^220 VMware Authentication Daemon

#BitTorrent
label 6881 regex ^\x13BitTorrent protocol

#LDAP
label 389 plugin ldapplugin ldapplugin_LTX_ycLdapScanScan

#DNP 3.0
label 20000 plugin dnp3plugin dnp3plugin_LTX_ycDnpScanScan

#Modbus
label 502 plugin modbusplugin modbusplugin_LTX_ycModbusScanScan
 
#EthIP
label 44818 plugin ethipplugin ethipplugin_LTX_ycEthIPScanScan

#NetBIOS Datagram Service/SMB                                                            
label 138 plugin netdgmplugin netdgmplugin_LTX_ycNetDgmScanScan

#Gh0st
label 9997 plugin gh0stplugin gh0stplugin_LTX_ycGh0stScanScan

#PI http://badishi.com/initial-analysis-of-poison-ivy/
label 65534 plugin piplugin piplugin_LTX_ycPIScanScan

#LDP
label 646 plugin ldpplugin ldpplugin_LTX_ycLdpScanScan

#Palevo http://walisecurity.wordpress.com/
label 65533 plugin palplugin palplugin_LTX_ycPalScanScan

#NTP
label 123 plugin ntpplugin ntpplugin_LTX_ycNTP

# Sample Signature
#label 1000 signature <Find Me>
