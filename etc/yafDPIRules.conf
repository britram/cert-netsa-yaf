##########################################################################
#
# yafDPIRules.conf
# Deep packet inspection rules and configuration for YAF
# ------------------------------------------------------------------------
# Copyright (C) 2012-2016 Carnegie Mellon University. All Rights Reserved.
# ------------------------------------------------------------------------
# Authors: Emily Sarneso <ecoff@cert.org>
#
# ------------------------------------------------------------------------
# GNU General Public License (GPL) Rights pursuant to Version 2, June 1991
# Government Purpose License Rights (GPLR) pursuant to DFARS 252.227-7013
#
##########################################################################
#
# Format of this File
#
# Optional: This file may contain 2 "limit" statements. A limit statement
# begins with the keyword 'limit', and has the following form:
#
#           limit [field|total] <limit-value>
#
# If the "field" label is present, the <limit-value> will be the number of 
# bytes yaf will export for any given field in this file.  This does
# not affect the DNS Deep Packet Inspection or SSL Certificate Capture.
# For DNS, a domain name can have a maximum of 255 characters, so the
# limit is not configurable. 
# If the "total" field is present, the <limit-value> will be the total number of 
# bytes yaf will export from the DPI plugin.  Obviously, this number will
# not be larger than the --max-payload value yaf is given at run time.
#
# Both the field and total limits have a maximum value of 65535. If they
# are larger, they will be set back to the defaults of 200 for per-field
# limit and 1000 for total limit.
#
# This file is a list of label statements. A label statement begins with
# the keyword 'label', and has the following form:
#
#           label <N> yaf <E> <label-rule>
#                                                                       
# where <N> is the application label in yafAppLabelRules.conf 
# The regular expressions associated with <N> will only be executed
# if the application labeler labels the flow with <N>.
# There is a limit to how many bytes per flow YAF will export so list the most
# important regular expressions before others. <E> is the info element
# number that should be defined in CERT_IE.h.  <label-rule> is the pcre
# regular expression that should be executed on the payload of the flow.
# "yaf labels" are labels that yaf have already been defined in the 
# Information Model. If they are commented out or removed from this file, 
# they may still be exported in the record as NULL fields and their 
# regular expressions will not be executed against the flow.  
#
# Define your own elements
#
# To define your own elements for the below protocols, use the following
# form:
#
#           label <N> user <E> name <element-name> <label-rule>
#
# where <N> is the application label in yafAppLabelRules.conf.  The regular
# expressions associated with <N> will only execute if the application
# labeler labels the flow with <N>.  <E> is the information element number.
# The element does NOT need to be defined in CERT_IE.h, however the yaf
# collecting process needs to know about this element to properly decode
# the IPFIX message.  This number should be unique to this file.
# <element-name> is the name you want to give to this newly-defined 
# IPFIX information element.  The name must only contain letters, numbers, or
# underscores.  It can not contain special characters or spaces.
# <label-rule> is the pcre regular
# expression to be executed on the payload of the flow.  There is a limit of 
# 30 "user labels" per protocol that YAF will execute.  To find out if yaf
# accepted your elements, run yaf with --verbose.  All user elements will 
# be exported using the CERT Private Enterprise Number (PEN) 6871.
# ONLY user labels for the below protocols (FTP, HTTP, IMAP, SMTP, RTSP, 
# SSH, SIP) will be added.  All elements will be added to the appropriate
# protocol template in the form of an fbBasicList_t.  
#
# By default, YAF exports the first 20 information elements listed in this 
# file, yaf or user defined, for HTTP.  YAF will always export at least 20
# elements in the HTTP Template and Data Record.  The user can uncomment or
# add up to 30 additional fields for HTTP.  The additional HTTP fields below 
# are disabled by default.  Uncomment the line to enable the other yaf 
# HTTP fields.
#
# By default, YAF exports 5 information elements for FTP, 7 information
# elements for IMAP, 12 elements for RTSP, 7 elements for SIP, 1 element
# for SSH, and 11 elements for SMTP.  The user may define up to an
# additional 30 elements for these protocols.  The user may also decide to
# remove the yaf-defined elements completely and add additional user elements
# up to 30 plus the default for the protocol. 
#
# A '#' symbol starts a comment, and the rest of the line is a comment
# If a rule is not properly formatted, all subsequent rules may not be
# processed.
#
# There are also 4 configuration options.  The first 2 configure
# the amount of data the DPI plugin can export.  The following 2 
# configure SSL certificate export.  More information can
# be found in the yafdpi man page.
##########################################################################

#DPI configuration limits
#limit per field length
limit field 200
#limit total byte count
limit total 1000

# Turn on full SSL certificate export by setting = 1
# enabling this results in exporting the entire binary X.509 Certificate
# and disabling SSL Deep Packet Inspection. 
cert_export_enabled = 0
# Enable export of hash of X.509 Certificate. Length can vary with algorithm 
cert_hash_enabled = 0

# FTP Rules

label 21 yaf 131 ^(?i)(REST|RETR|STO[RU] [-a-zA-Z0-9_ ]+)\b
label 21 yaf 132 ^(?i)USER ([-_a-zA-Z0-9]+)\b
label 21 yaf 133 ^(?i)PASS ?([[:print:]]+)
label 21 yaf 134 ^(?i)TYPE (A|E|I)\b
label 21 yaf 135 ^(?i)([1-5][0-5][0-7] ?[-a-zA-Z0-9.() ]+)\b

# Example User Defined rule
#label 21 user 999 name ftpUserElement string-to-search-for-in-ftp

# HTTP Rules
label 80 yaf 110 ^Server: ?([-a-zA-Z0-9.~!/:;@#$%^&*=+,_() ]+) 
label 80 yaf 111 ^User-Agent: ?([-a-zA-Z0-9.~!/:;@#$%^&*=+,_() ]+)
label 80 yaf 112 ^((GET|HEAD|POST|CONNECT|OPTIONS|DELETE|TRACE|PUT) [[:graph:]]+)
label 80 yaf 113 ^[Cc]onnection: ?([-a-zA-Z0-9;:=,_ ]+)
label 80 yaf 115 ^Referer: ?([[:print:]]+)
label 80 yaf 116 ^Location: ?([[:print:]]+)
label 80 yaf 117 ^Host: ?([-a-zA-Z0-9.~!/:;@#$%^&*=+ ]*)
label 80 yaf 118 ^(?i)Content-Length: ?([0-9]+)
label 80 yaf 119 ^Age: ([0-9]+)
label 80 yaf 123 ([1-5][01][0-9] [a-zA-Z ]+)
label 80 yaf 121 ^Accept-Language: ?([[:print:]]+)
label 80 yaf 120 ^Accept: ?([[:print:]]+)
label 80 yaf 122 ^(?i)Content-Type: ?([[:print:]]+)
label 80 yaf 114 (HTTP/\d\.\d)\b
label 80 yaf 220 ^Cookie: ?([[:print:]]+)
label 80 yaf 221 ^Set-Cookie: ?([[:print:]]+)
label 80 yaf 252 ^Authorization: ?([[:print:]]+)
label 80 yaf 253 ^Via: ?([[:print:]]+)
label 80 yaf 254 ^(?i)x-forwarded-for: ?([-a-zA-Z0-9.,~!/:;@#$%^&*=+ ]*)
label 80 yaf 256 ^Refresh: ?([[:print:]]+)

# HTTP Mobile - turned off by default
#label 80 yaf 257 ^(?i)x-[-a-zA-Z0-9]*imei: ?([0-9]+)
#label 80 yaf 258 ^(?i)x-[-a-zA-Z0-9]*imsi: ?([0-9]+)
# the following 3 regexs all describe the same "thing" - hence same IE #
#label 80 yaf 259 ^(?i)x-[-a-zA-Z0-9]*msisdn: ?([0-9]+)
#label 80 yaf 259 ^(?i)x-[-a-zA-Z0-9]*identity: ?([0-9]+)
#label 80 yaf 259 ^x-[wau]+p-calling-line-id: ?([0-9]+) 
#label 80 yaf 260 ^(?i)x-opwv-ddm-identity: ([-a-zA-Z0-9.~!/:;@#$%^&*=+,_ ]*)

# HTTP Extra Fields - turned off by default
#label 80 yaf 255 ^Expires: ?([a-zA-Z0-9:, ]+)
#label 80 yaf 261 ^[aA]ccept-[cC]harset: ?([[:print:]]+) 
#label 80 yaf 262 ^[aA]ccept-[eE]ncoding: ?([[:print:]]+) 
#label 80 yaf 263 ^[aA]llow: ?([[:print:]]+) 
#label 80 yaf 264 ^Date: ?([a-zA-Z0-9:, ]+)
#label 80 yaf 265 ^Expect: ?([[:print:]]+)
#label 80 yaf 266 ^[fF]rom: ?([[:print:]]+)
#label 80 yaf 267 ^[pP]roxy-[aA]uthorization: ?([[:print:]]+)  
#label 80 yaf 268 ^Upgrade: ?([[:print:]]+)
#label 80 yaf 269 ^Warning: ?([[:print:]]+)
#label 80 yaf 270 ^DNT: ?(0|1)
#label 80 yaf 271 ^(?i)x-forwarded-proto: ?([[:print:]]+)
#label 80 yaf 272 ^(?i)x-forwarded-host: ?([[:print:]]+)
#label 80 yaf 273 ^(?i)x-forwarded-server: ?([[:print:]]+)
#label 80 yaf 274 ^(?i)x-[a-z]+-deviceid: ?([[:print:]]+)
#label 80 yaf 275 ^(?i)x-wap-profile: ?([[:print:]]+)
#label 80 yaf 276 ^[lL]ast-[mM]odified: ?([a-zA-Z0-9:, ]+)
#label 80 yaf 277 ^[cC]ontent-[eE]ncoding: ?([[:print:]]+)  
#label 80 yaf 278 ^[cC]ontent-[lL]anguage: ?([[:print:]]+)  
#label 80 yaf 279 ^[cC]ontent-[lL]ocation: ?([[:print:]]+)  
#label 80 yaf 280 ^(?i)x-ua-compatible: ?([[:print:]]+)

# IMAP Rules
label 143 yaf 136 CAPABILITY ([-a-zA-Z0-9+= ]+)\b
label 143 yaf 137 LOGIN ([a-zA-Z0-9" ]+)\b
label 143 yaf 138 (STARTTLS)\b
label 143 yaf 139 AUTHENTICATE ([a-zA-Z0-9]+)\b
label 143 yaf 140 ((SELECT|COPY|EXAMINE|CREATE|DELETE|RENAME|(UN)?SUBSCRIBE|LIST|LSUB|STATUS|APPEND) [-a-zA-Z0-9/.:()" *\\]+)
label 143 yaf 141 ^\x2A? ?([0-9]* EXISTS)\b
label 143 yaf 142 ^\x2A? ?([0-9]* RECENT)\b

# RTSP Rules
label 554 yaf 143 rtsp://([-a-zA-Z0-9.:]*/\S*)
label 554 yaf 144 (RTSP/\d.\d)
label 554 yaf 145 ((?=RTSP/\d.\d) [1-5][015][0-9] [a-zA-Z ]+)\b
label 554 yaf 146 Content-Length: ([0-9]+)\b
label 554 yaf 147 ([A-Z]+ (?:rtsp://[-a-zA-Z0-9.:]*/*\S*))
label 554 yaf 148 (?i)Content-Type: ([-a-zA-Z0-9/]+)\b
label 554 yaf 149 ^Transport: ([-a-zA-Z0-9/;=_]+)\b
label 554 yaf 150 CSeq: ([0-9]+)\b
label 554 yaf 151 Location: rtsp://([-a-zA-Z0-9.:/]*/\S*) 
label 554 yaf 152 (?i)packets_received: ?([0-9]+)\b
label 554 yaf 153 ^User-Agent: ([-a-zA-Z0-9_ ]+)\b
label 554 yaf 154 ^(?i)Jitter: ?([0-9.]+)\r\n

# SIP Rules
label 5060 yaf 155 ^INVITE sip:([-a-zA-Z0-9.@=;]* SIP/\d\.\d)\b
label 5060 yaf 156 ^((OPTIONS|ACK|BYE|CANCEL|REGISTER|SUBSCRIBE) sip:[-a-zA-Z0-9.@=;]* SIP/\d\.\d)\b
label 5060 yaf 157 ^(Via: SIP/\d\.\d/[TU][DC]P [-a-zA-Z0-9.@:;=]*)
label 5060 yaf 158 ^Max-Forwards: ([0-9]+)
label 5060 yaf 159 ^(?i)((To|From|Contact): ?([[:print:]]+))
label 5060 yaf 160 ^Content-?Length: ([0-9]+)
label 5060 yaf 161 ^(?i)User-Agent: ?([[:print:]]+)

# SSH Rules
label 22 yaf 171 ^(SSH-\d\.\d-?[-_.a-zA-Z0-9 ]*)\r\n

# SMTP Rules
label 25 yaf 162 ^((?i)(HE|EH)LO ?\[?[a-zA-Z0-9 \.]+\]?)\b
label 25 yaf 163 (?i)From: ?<?([-a-zA-Z0-9_. ]+\@?\[?[-a-zA-Z0-9._]+\]?)>?\b
label 25 yaf 164 (?i)((TO|Cc|Bcc): ?<?[-a-zA-Z0-9._ ]+\@?[-a-zA-Z0-9._]+>?)\b
label 25 yaf 165 ^(?i)Content-Type: ([-a-zA-Z0-9/]+)\b
label 25 yaf 166 ^(?i)Subject: ?([-a-zA-Z0-9._+$%!#&@:; ]+)\b
label 25 yaf 167 ^(?i)filename=([-a-zA-Z0-9"._ ]+)\b
label 25 yaf 168 ^(?i)Content-disposition: ([a-zA-Z]+;?)\b
label 25 yaf 169 (^[2345]\d{2} ?[-a-zA-Z0-9@.,:?=/ ]+\[?[0-9.]*\]?)\b
label 25 yaf 170 ^(ESMTP [_a-zA-Z0-9. @#]+)\b
label 25 yaf 222 (?i)size=([0-9]+)
label 25 yaf 251 ^(?i)Date: ?([-a-zA-Z0-9:, ]+)\b

# SCADA Protocols - Disabled by default
# DNP3 Rules - this one captures all write requests/responses
#label 20000 yaf 284 (\x02[\x00-\xff]+)

# Modbus Rules - this captures function 17: Report Slave ID
#label 502 yaf 285 ^\x11..\xFF([a-zA-Z0-9 ]+)

# ENIP Rules - this captures Product name in List Identity Response packets
#label 44818 yaf 286 \x63\x00.{6}\x00{16}\x01\x00\x0c\x00..\x01\x00[\x00-\xff]{31}([-a-zA-Z0-9/ ]+)
# captures the Name of service in List Services Response packets
#label 44818 yaf 286 \x04\x00.{6}\x00{4}[\x00-\xFF]{8}\x00{4}\x01\x00\x00\x01..\x01\x00..([-a-zA-Z0-9/ ]+)
