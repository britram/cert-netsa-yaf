.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "AIRDAEMON 1"
.TH AIRDAEMON 1 "%v" "2.9.4" "airframe"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
airdaemon \- Run a program as a daemon process, restarting it if it dies
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&    airdaemon   [\-\-retry RETRY_DELAY] [\-\-retry\-max RETRY_MAX_DELAY]
\&                [\-\-pidfile PID_FILE] [\-\-airdaemon\-pidfile PID_FILE] 
\&                [\-\-log LOG_SPECIFIER] [\-\-loglevel LOG_LEVEL]
\&                [\-\-verbose] [\-\-version] [\-\-no\-daemon]
\&                \-\- PROGRAM [PROGRAM_ARGS]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBairdaemon\fR invokes a child process and ensures that it is restarted if it
encounters any errors.  The delay between child exit and restart can be
chosen, and can either be constant or exponentially increasing up to a
specified maximum.
.PP
Use of two dashes (\-\-) after all airdaemon command-line switches allows
\&\s-1PROGRAM_ARGS\s0 to be interpreted by the \s-1PROGRAM\s0 rather than \fBairdaemon\fR itself.
While they are not strictly required if you do not need to pass arguments to
\&\s-1PROGRAM,\s0 they should be used for consistency.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Daemon Options"
.IX Subsection "Daemon Options"
.IP "\fB\-\-retry\fR=\fI\s-1RETRY_DELAY\s0\fR" 4
.IX Item "--retry=RETRY_DELAY"
Wait \s-1RETRY_DELAY\s0 seconds after the child process exits abnormally until trying
to restart the child process.  See also \fB\-\-retry\-max\fR
.IP "\fB\-\-retry\-max\fR=\fI\s-1RETRY_MAX_DELAY\s0\fR" 4
.IX Item "--retry-max=RETRY_MAX_DELAY"
This parameter, combined with the \fB\-\-retry\fR parameter, facilitates truncated
binary exponential backoff of the retry logic.	The first retry attempt will
be delayed by the value of the \fB\-\-retry\fR parameter.  If the child process
exits abnormally within this time period, the delay is doubled.  Once the
child process survives longer than the value of the \fB\-\-retry\fR parameter, the
retry delay is reset to that value.
.Sp
For example, assume \fB\-\-retry\fR=30 and \fB\-\-retry\-max\fR=240.  The first time the
child process exits abnormally, \fBairdaemon\fR will wait 30 seconds before
invoking the child process again.  If it exits abnormally again within 30
seconds, \fBairdaemon\fR will wait 60 seconds and try again.  If the process
dies again within 30 seconds, the delay doubles again to 120.  The process
continues until the delay hits the maximum of 240.  Once the child process
survives for 30 seconds, the delay will be reset to the original retry delay
of 30.
.IP "\fB\-\-pidfile\fR=\fI\s-1PID_FILE\s0\fR" 4
.IX Item "--pidfile=PID_FILE"
Write the process identifier of the child process to \fI\s-1PID_FILE\s0\fR.
Each time the child process is restarted, the process identifier in this file
is updated. This option exists to facilitate the termination of the child
process by shutdown scripts. Note that if the child process terminates
normally during shutdown, airdaemon will terminate normally as well, so it
is usually sufficient just to kill the pid in this file at shutdown.
.IP "\fB\-\-airdaemon\-pidfile\fR=\fI\s-1PID_FILE\s0\fR" 4
.IX Item "--airdaemon-pidfile=PID_FILE"
Write the process identifier of the airdaemon process to \fI\s-1PID_FILE\s0\fR. 
This option exists to facilitate the termination of the forked
airdaemon process by shutdown scripts.
.IP "\fB\-\-no\-daemon\fR" 4
.IX Item "--no-daemon"
Do not actually daemonize.  Mainly useful for testing/debugging.
.SS "Logging Options"
.IX Subsection "Logging Options"
These options are used to specify how log messages are routed.  airdaemon can 
log to standard error, regular files, or the \s-1UNIX\s0 syslog facility.
.IP "\fB\-\-log\fR \fI\s-1LOG_SPECIFIER\s0\fR" 4
.IX Item "--log LOG_SPECIFIER"
Specifies destination for log messages. \fI\s-1LOG_SPECIFIER\s0\fR can be a \fIsyslog\fR\|(3)
facility name, the special value \fBstderr\fR for standard error, or the 
\&\fIabsolute\fR path to a file for file logging. Standard error logging is only 
available in \fB\-\-daemon\fR mode if \fB\-\-foreground\fR is present. The default log 
specifier is \fBstderr\fR if available, \fBuser\fR otherwise.
.IP "\fB\-\-loglevel\fR \fI\s-1LOG_LEVEL\s0\fR" 4
.IX Item "--loglevel LOG_LEVEL"
Specify minimum level for logged messages. In increasing levels of verbosity, 
the supported log levels are \fBquiet\fR, \fBerror\fR, \fBcritical\fR, \fBwarning\fR, 
\&\fBmessage\fR, \fBinfo\fR, and \fBdebug\fR. The default logging level is \fBwarning\fR.
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
Equivalent to \fB\-\-loglevel debug\fR.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
If present, print version and copyright information to standard error and exit.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
The following will ping www.cert.org every 15 seconds until ping returns
sucess:
.PP
.Vb 1
\&    airdaemon \-\-retry 15 \-\- ping \-c 1 www.cert.org
.Ve
.PP
The same as above, except the delay will double until reaching a maximum of 15
minutes:
.PP
.Vb 1
\&    airdaemon \-\-retry 15 \-\-retry\-max 900 \-\- ping \-c 1 www.cert.org
.Ve
.SH "BUGS"
.IX Header "BUGS"
Known issues are listed in the \fB\s-1README\s0\fR file in the Airframe source 
distribution. Note that airdaemon should be considered alpha-quality software;
not every concievable input and aggregation is exhaustively tested at each 
release, and specific features may be completely untested. Please be mindful 
of this before deploying airdaemon in production environments. Bug reports and 
feature requests may be sent via email to <netsa\-help@cert.org>.
.SH "AUTHORS"
.IX Header "AUTHORS"
Tony Cebzanov and  Brian Trammell for the 
\&\s-1CERT\s0 Network Situational Awareness
Group, http://www.cert.org/netsa
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIfiledaemon\fR\|(1)
